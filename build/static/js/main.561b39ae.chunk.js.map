{"version":3,"sources":["services/cardService.js","reducers/cardReducer.js","App.js","store.js","index.js"],"names":["getAll","a","axios","get","data","create","content","post","update","id","put","remove","delete","cardReducer","state","action","undefined","type","card","map","c","filter","App","dispatch","useDispatch","cards","useSelector","useEffect","cardService","front","reducer","combineReducers","sets","setReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yPASe,GAAEA,OALL,uCAAG,sBAAAC,EAAA,sEAAmBC,IAAMC,IAFxB,cAED,uCAAuCC,MAAvC,2CAAH,qDAKaC,OAJb,uCAAG,WAAMC,GAAN,SAAAL,EAAA,sEAAwBC,IAAMK,KAH7B,aAG2CD,GAA5C,uCAAsDF,MAAtD,2CAAH,sDAIqBI,OAHrB,uCAAG,WAAOC,EAAIH,GAAX,SAAAL,EAAA,sEAA8BC,IAAMQ,IAAN,UAJ7B,aAI6B,YAAwBD,GAAMH,GAA5D,uCAAsEF,MAAtE,2CAAH,wDAG6BO,OAF7B,uCAAG,WAAMF,GAAN,SAAAR,EAAA,sEAAmBC,IAAMU,OAAN,UALlB,aAKkB,YAA2BH,IAA9C,uCAAqDL,MAArD,2CAAH,uDCgCGS,EArCK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpCN,EAAgB,OAAXM,EAAkBA,EAAOX,KAAKK,QAAKO,EAC9C,OAAQD,EAAOE,MACb,IAAK,YACH,OAAOF,EAAOX,KAChB,IAAK,cACH,MAAM,GAAN,mBAAWU,GAAX,CAAkBC,EAAOX,OAC3B,IAAK,cACH,IAAMc,EAAOH,EAAOX,KACpB,OAAOU,EAAMK,KAAI,SAAAC,GAAC,OAAIA,EAAEX,KAAOA,EAAKS,EAAOE,KAC7C,IAAK,cACH,OAAON,EAAMO,QAAO,SAAAD,GAAC,OAAIA,EAAEX,KAAOA,KACpC,QACE,OAAOK,ICMEQ,EAjBH,WACV,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAZ,GAAK,OAAIA,EAAMW,SAMzC,OAJAE,qBAAU,WACRJ,EDWF,uCAAO,WAAMA,GAAN,eAAAtB,EAAA,sEACe2B,EAAY5B,SAD3B,OACCyB,EADD,OAELF,EAAS,CACPN,KAAM,YACNb,KAAMqB,IAJH,2CAAP,yDCVG,CAACF,IAGF,6BACE,4BACGE,EAAMN,KAAI,SAAAC,GAAC,OAAI,4BAAKA,EAAES,a,wCCTzBC,EAAUC,0BAAgB,CAC9BN,MAAOZ,EACPmB,KAAMC,MAUOC,EAPDC,sBACZL,EACAM,8BACEC,0BAAgBC,OCRpBC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.561b39ae.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/cards'\n\nconst getAll = async () => (await axios.get(baseUrl)).data\nconst create = async content => (await axios.post(baseUrl, content)).data\nconst update = async (id, content) => (await axios.put(`${baseUrl}/${id}`, content)).data\nconst remove = async id => (await axios.delete(`${baseUrl}/${id}`)).data\n\nexport default { getAll, create, update, remove }","import cardService from '../services/cardService'\n\nconst cardReducer = (state = [], action) => {\n  const id = action === null ? action.data.id : undefined\n  switch (action.type) {\n    case 'GET_CARDS':\n      return action.data\n    case 'CREATE_CARD':\n      return [...state, action.data]\n    case 'CHANGE_CARD':\n      const card = action.data\n      return state.map(c => c.id === id ? card : c)\n    case 'DELETE_CARD':\n      return state.filter(c => c.id !== id)\n    default:\n      return state\n  }\n}\n\nexport const getCards = () => {\n  return async dispatch => {\n    const cards = await cardService.getAll()\n    dispatch({\n      type: 'GET_CARDS',\n      data: cards\n    })\n  }\n}\n\nexport const createCard = content => {\n  return async dispatch => {\n    const newCard = await cardService.create(content)\n    dispatch ({\n      type: 'CREATE_CARD',\n      data: newCard\n    })\n  }\n}\n\nexport default cardReducer","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCards } from './reducers/cardReducer'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const cards = useSelector(state => state.cards)\n\n  useEffect(() => {\n    dispatch(getCards())\n  }, [dispatch])\n\n  return (\n    <div>\n      <ul>\n        {cards.map(c => <li>{c.front}</li>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import cardReducer from './reducers/cardReducer'\nimport setReducer from './reducers/setReducer'\nimport thunk from 'redux-thunk'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst reducer = combineReducers({\n  cards: cardReducer,\n  sets: setReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}